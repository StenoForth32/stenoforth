\ stenoforth32

\ перевод часто используемых имен слов в нижний регистр 

m: c@ C@ ;
m: w@ W@ ;
m: c! C! ;
m: w! W! ;
m: c, C, ;
m: w, W, ;
m: dup DUP ;
m: 2dup 2DUP ;
m: drop DROP ;
m: 2drop 2DROP ;
m: swap SWAP ;
m: 2swap 2SWAP ;
m: over OVER ;
m: nip NIP ;
m: tuck TUCK ;
m: 2over 2OVER ;
m: rot ROT ;
m: -rot -ROT ;
m: sp@ SP@ ;
m: sp! SP! ;
m: >r >R ;
m: 2>r 2>R ;
m: r> R> ;
m: 2r> 2R> ;
m: r@ R@ ;
m: 2r@ 2R@ ;
m: rp@ RP@ ;
m: rp! RP! ;
m: depth DEPTH ;
m: rdepth RDEPTH ;
m: .bl .BL ;
m: bl BL ;
m: space SPACE ;
m: spaces SPACES ;
m: d. D. ;
m: cr CR ;
m: hex HEX ;
m: decimal DECIMAL ;
m: binary BINARY ;
m: or OR ;
m: xor XOR ;
m: and AND ;
m: invert INVERT ;
m: lshift LSHIFT ;
m: rshift RSHIFT ;
m: if IF ;
m: else ELSE ;
m: then THEN ;
m: true TRUE ;
m: false FALSE ;
m: case CASE ;
m: of OF ;
m: endof ENDOF ;
m: endcase ENDCASE ;
m: begin BEGIN ;
m: again AGAIN ;
m: until UNTIL ;
m: while WHILE ;
m: repeat REPEAT
m: exit EXIT ;
m: do DO ;
m: ?do ?DO ;
m: ado aDO ;
m: i+ I+ ;
m: leave LEAVE ;
m: unloop UNLOOP ;
m: loop LOOP ;
m: +loop +LOOP ;
m: create CREATE ;
m: aligned ALIGNED ;
m: align ALIGN ;
m: align-nop ALIGN-NOP ;
m: dp DP ;
m: here HERE ;
m: allot ALLOT ;
m: variable VARIABLE ;
m: value VALUE ;
m: vect VECT ;
m: allocate ALLOCATE ;
m: resize RESIZE ;
m: free FREE ;
m: throw THROW ;
m: recurse RECURSE ;
m: constant CONSTANT ;
m: rallot RALLOT ;
m: user USER ;
m: user-value USER-VALUE ;
m: user-create USER-CREATE ;
m: latest LATEST ;
m: last LAST ;
m: vocabulary VOCABULARY ;
m: definition DEFINITION ;
m: also ALSO ;
m: previous PREVIOUS ;
m: lit, LIT, ;
m: slit, SLIT, ;
m: rlit, RLIT, ;
m: dlit, DLIT, ;
m: code CODE ;
m: end-code END-CODE ;
m: ret, RET, ;
m: :noname :NONAME ;
m: erase ERASE ;
m: fill FILL ;
m: compare COMPARE ;
m: search SEARCH ;
m: move MOVE ;
m: emit EMIT ;
m: key KEY ;
m: within WITHIN ;
m: min MIN ;
m: max MAX ;
m: abs ABS ;
m: negate NEGATE ;
m: mod MOD ;
m: /mod /MOD ;
m: evaluate EVALUATE ;
m: compile, COMPILE, ;
m: [compile] [COMPILE] ;
m: postpone POSTPONE ;
m: execute EXECUTE ;
m: immediate IMMEDIATE ;
m: base BASE ;
m: state STATE ;
I: s" ` S" ;
m: type TYPE ;
m: dump DUMP ;
m: see SEE ;
m: seet SEET ;
